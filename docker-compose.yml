version: '3.8'

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ${PROJECT_NAME}_nginx
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
    networks:
      - app-network

  php:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: ${PROJECT_NAME}_php
    volumes:
      - ./backend:/var/www/html
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    container_name: ${PROJECT_NAME}_mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${PROJECT_NAME}_db
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-network

  redis:
    image: redis:alpine
    container_name: ${PROJECT_NAME}_redis
    networks:
      - app-network

  node:
    image: node:18-alpine
    container_name: ${PROJECT_NAME}_node
    volumes:
      - ./frontend:/var/www/html
    working_dir: /var/www/html
    command: npm run dev
    ports:
      - "5173:5173"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  db-data:
    driver: local
